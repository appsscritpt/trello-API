
  var TrelloKey = "TRELLO KEY"
  var TrelloToken = "TRELLO TOKEN"
  var TrelloList =  "LIST_ID"
function getAllCards(data,cardName) {
  //cardName = 'new trigger'
  var url = "https://api.trello.com/1/lists/" + TrelloList + "/cards/?key=" + 
  TrelloKey + "&token=" + TrelloToken + "";
   var options = {"method" : "get"}
    var response = UrlFetchApp.fetch(url, options);
    var responseJson = JSON.parse(response);
    for(var i = 0; i < responseJson.length;i++) {
      if(responseJson[i].name == cardName) {
         var card_id = responseJson[i].id
         //Logger.log(responseJson[i].id)
         var res = updateTrelloCard(data, card_id)
         return res
      }
    }
     
    return 'missed'
 }



function updateTrelloCard(data,cardId) {

  
  //ObjectIDs for Trello labels in JS variables
  var labels = 'labelid1,labelid2....';
 
  var ownerName = data[1]
  var cardName = data[0]
  var cardDesc = "Contact Info\n==========\n" 
  +"**Owner Name and Surname:** " + data[1] 
  + "\n**Owner Phone Number:** "+ data[2] 
+ "\n**Owner Email:** "+ data[3] 
+  "\n**Realtor Name:** "+ data[4] 
+  "\n**Realtor Phone:** "+ data[5] 
+  "\n**Realtor Email:** "+ data[6]
+ "\n**Home Address:** "+ data[7] +
 "\n\nDesign Information\n================\n" +
 "\n**Rooms to Stage:** "+data[8]+
 "\n**Budget:** "+data[9] +
 "\n**Stage Date:** "+
 Utilities.formatDate(new Date(data[10]),Session.getTimeZone(), 'MM/DD/YYYY') +
 "\n**Project Type:** "+data[11]+
 "\n**Design Style:** "+ data[12]+
 "\n**Design Notes:** "+ data[13] + 
 "\n**Furniture Amendments:** "+ data[14] +
 "\n**Access Info:** " + data[15] 
 
//*****************************************************
//****** DO NOT CHANGE ANYTHING BELOW THIS LINE *******
//*****************************************************
//Make comma separated list from labels

var dt =  new Date(data[10])
dt.setHours(7,0,0)
//Send POST payload data via Trello API
//POST [/1/cards], Required permissions: write
  var payload = {"name":cardName,
                  "desc":cardDesc,
                  "pos":"top",
                  "due": dt , //(required) A date, or null
                  "idList":TrelloList, 
                  "idLabels": labels
                };

   //Because payload is a JavaScript object, it will be interpreted as an HTML form
   try {
   var url = "https://api.trello.com/1/cards/" + cardId + "?key=" + TrelloKey + "&token=" 
   + TrelloToken + ""
  var options = {"method" : "PUT", "payload" : payload}
  var response = UrlFetchApp.fetch(url, options)
  var responseJson = JSON.parse(response)
  var cardID = responseJson.id
  return "updated"
   } catch (er) {
     return "Error"
   }

 }


function createTrelloCard(data) {
Logger.log(data)
//CONFIG VARIABLES TO EDIT
  //Trello app key
  //Go to https://trello.com/1/appKey/generate to generate key
  //Key to Trello app - SPECIFIC TO YOUR ACCOUNT

  //Trello app token
  //Go to https://trello.com/1/connect?key=<kEY>&name=<TRELLO APP NAME>&response_type=token&scope=read,write to generate token

  //Token for authorization - SPECIFIC TO YOUR ACCOUNT

  //ObjectID for Trello List that you want cards to be added to

  //ObjectIDs for Trello labels in JS variables
  var labels = [];
  var label1 = 'help!';
  //ADD ADDITIONAL LABELS HERE IF NECESSARY
//END

//Get last submitted values from the responses Sheet
  // var values = range.getValues();
  // var column = data[0];

//Put values from the Sheet into JS variables
  //var timestamp = column[0];
  
  var ownerName = data[1]
  //ADD MORE VARIABLES HERE FOR EACH COLUMN ON THE SHEET
  //KEEP IN MIND THAT COLUMNS ARE ZERO-INDEXED


//Build and format data that will be pused for card Name and Description
//cardName and cardDesc variables should be a String
//Trello markdown can be put directly into the strings for formatting in the cardDesc


  var cardName = data[0]
 var cardDesc = "Contact Info\n==========\n" 
  +"**Owner Name and Surname:** " + data[1] 
  + "\n**Owner Phone Number:** "+ data[2] 
+ "\n**Owner Email:** "+ data[3] 
+  "\n**Realtor Name:** "+ data[4] 
+  "\n**Realtor Phone:** "+ data[5] 
+  "\n**Realtor Email:** "+ data[6]
+ "\n**Home Address:** "+ data[7] +
 "\n\nDesign Information\n================\n" +
 "\n**Rooms to Stage:** "+data[8]+
 "\n**Budget:** "+data[9] +
 "\n**Stage Date:** "+
 Utilities.formatDate(new Date(data[10]),Session.getTimeZone(), 'MM/DD/YYYY')+
 "\n**Project Type:** "+data[11]+
 "\n**Design Style:** "+ data[12]+
 "\n**Design Notes:** "+ data[13] + 
 "\n**Furniture Amendments:** "+ data[14] +
 "\n**Access Info:** " + data[15] 
  //ADD ADDITIONAL LOGIC HERE IF NECESSARY

  //OPTIONAL: Add a footer to the bottom of all submissions
  //var footer = "\n\n" + "**Submitted on: **" + timestamp;
  //cardDesc = cardDesc + footer;

//Build labels depending on data from the form. This will be sent in payload (below)
   labels.push(label1); 
//Other Label ObjectIDs from Trello can be added with config variables above by adding additional lines like label.push(<label_variable>);
   //ADD ADDITIONAL LOGIC HERE IF NECESSARY
//*****************************************************
//****** DO NOT CHANGE ANYTHING BELOW THIS LINE *******
//*****************************************************
//Make comma separated list from labels
  labels.join(",");
var dt =  new Date(data[10])
dt.setHours(7,0,0)
//Send POST payload data via Trello API
//POST [/1/cards], Required permissions: write
  var payload = {"name":cardName,
                  "desc":cardDesc,
                  "pos":"top",
                  "due": dt , //(required) A date, or null
                  "idList":TrelloList, 
                };

   //Because payload is a JavaScript object, it will be interpreted as an HTML form
   var url = "https://api.trello.com/1/cards?key=" + TrelloKey + "&token=" + TrelloToken + "";
   var options = {"method" : "post",
                  "payload" : payload};
   try {
          var response = UrlFetchApp.fetch(url, options);
          var responseJson = JSON.parse(response);
          var cardID = responseJson.id
          return 'created'
   } catch(er) {
      return er.descripiton
  }
 }
function getTrelloCard(data) {

  var url = "https://api.trello.com/1/cards/<CARD id>?key=" + 
  TrelloKey + "&token=" + TrelloToken + "";
   var options = {"method" : "get"}
    var response = UrlFetchApp.fetch(url, options);
    var responseJson = JSON.parse(response);
    Logger.log(responseJson)
    var docLink = responseJson.id
    return docLink
 }




/////////////////////////////////////////
